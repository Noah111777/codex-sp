{"sections":{"category_nav_WaJaEe":{"type":"category-nav","blocks":{"category_WKc7FX":{"type":"category","settings":{"category_name":"BEFORE & AFTERS","section_id":"shopify-section-template--17873306845350__advanced_content_7B3cfV"}},"category_4VMyBd":{"type":"category","settings":{"category_name":"WELCOME VIDEO","section_id":"shopify-section-template--17873306845350__advanced_content_K3n8a3"}},"category_zra94R":{"type":"category","settings":{"category_name":"KATE & KEVIN TALK ABOUT +CODE","section_id":"shopify-section-template--17873306845350__advanced_content_VLJNWb"}},"category_PGQecm":{"type":"category","settings":{"category_name":"CODE FAMILIES","section_id":"shopify-section-template--17873306845350__advanced_content_fBV4LF"}},"category_FiTpw8":{"type":"category","settings":{"category_name":"APPLICATION VIDEO","section_id":"shopify-section-template--17873306845350__advanced_content_xUbfEa"}},"category_7bWryy":{"type":"category","settings":{"category_name":"Swatch Chart","section_id":"shopify-section-template--17873306845350__advanced_content_inCFk4"}},"category_CJR9dp":{"type":"category","settings":{"category_name":"Wall Chart","section_id":"shopify-section-template--17873306845350__advanced_content_inCFk4"}}},"block_order":["category_WKc7FX","category_4VMyBd","category_zra94R","category_PGQecm","category_FiTpw8","category_7bWryy","category_CJR9dp"],"settings":{}},"advanced_content_iJ9jpN":{"type":"advanced-content","blocks":{"liquid_JaGGGr":{"type":"liquid","settings":{"code":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" \/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Video Banner<\/title>\n  <style>\n    \/* Make the banner fill the viewport, allow layering *\/\n    #videoBanner {\n      position: relative;\n      width: 100%;\n      min-height: 100vh;\n      overflow: hidden;\n      background: #000; \/* Fallback background *\/\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    \/* Background video behind everything *\/\n    #bannerVideoBg {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      z-index: 0; \/* behind main video *\/\n      filter: blur(120px);\n      transform: scale(1.1); \/* a bit larger so edges aren't visible after blur *\/\n    }\n\n  \n    #bannerVideo {\n      display: block;\n      object-fit: cover;\n      border-radius: 80px;\n      position: relative;\n      z-index: 1; \/* above the blurred background *\/\n      width: 100%;\n      height: 100svh;\n    }\n\n    \/* Desktop styling for the main (foreground) video *\/\n    @media (min-width: 768px) {\n      #videoBanner {\n        \/* removed the linear gradient so background is just the blurred video *\/\n      }\n\n      #bannerVideo {\n        width: auto;\n        height: auto;\n        max-width: 80vw;\n        max-height: 80vh;\n        border-radius: 80px;\n        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.3);\n      }\n    }\n  <\/style>\n<\/head>\n<body>\n  <section id=\"videoBanner\">\n    <!-- Blurred Background Video -->\n    <video\n      id=\"bannerVideoBg\"\n      autoplay\n      muted\n      loop\n      playsinline\n      webkit-playsinline\n      preload=\"metadata\"\n      width=\"1920\"\n      height=\"1080\"\n      crossorigin=\"anonymous\"\n    >\n      <!-- Mobile First Sources -->\n      <source\n        src=\"MOBILE_VIDEO_URL.webm\"\n        type=\"video\/webm\"\n        media=\"(max-width: 767px)\"\n      >\n      <source\n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/910f3463101c49c0bc0b5913fd792adf.mp4\"\n        type=\"video\/mp4\"\n        media=\"(max-width: 767px)\"\n      >\n\n      <!-- Desktop Sources -->\n      <source\n        src=\"DESKTOP_VIDEO_URL.webm\"\n        type=\"video\/webm\"\n        media=\"(min-width: 768px)\"\n      >\n      <source\n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/e3a7145299854d1888650f31dd46100e.mp4\"\n        type=\"video\/mp4\"\n        media=\"(min-width: 768px)\"\n      >\n    <\/video>\n\n    <!-- Foreground Video -->\n    <video\n      id=\"bannerVideo\"\n      autoplay\n      muted\n      loop\n      playsinline\n      webkit-playsinline\n      preload=\"metadata\"\n      width=\"1920\"\n      height=\"1080\"\n      crossorigin=\"anonymous\"\n    >\n      <!-- Mobile First Sources -->\n      <source\n        src=\"MOBILE_VIDEO_URL.webm\"\n        type=\"video\/webm\"\n        media=\"(max-width: 767px)\"\n      >\n      <source\n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/910f3463101c49c0bc0b5913fd792adf.mp4\"\n        type=\"video\/mp4\"\n        media=\"(max-width: 767px)\"\n      >\n\n      <!-- Desktop Sources -->\n      <source\n        src=\"DESKTOP_VIDEO_URL.webm\"\n        type=\"video\/webm\"\n        media=\"(min-width: 768px)\"\n      >\n      <source\n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/e3a7145299854d1888650f31dd46100e.mp4\"\n        type=\"video\/mp4\"\n        media=\"(min-width: 768px)\"\n      >\n    <\/video>\n  <\/section>\n\n  <script>\n    \/*\n      Debugging fix:\n      - The crossOrigin=\"anonymous\" attribute is set in <video>.\n      - The server hosting the video must send appropriate CORS headers\n        (e.g., Access-Control-Allow-Origin: *) or the browser will still\n        mark the canvas as tainted.\n      - If that happens, getImageData() throws a SecurityError.\n\n      TEST CASES:\n      1) Verify that <video> has crossOrigin set to \"anonymous\".\n      2) Attempt color extraction and confirm no SecurityError if server has valid CORS.\n      3) If the server lacks valid CORS, confirm fallback or skip.\n      4) Verify fallback color usage if getImageData fails (i.e., SecurityError).\n    *\/\n\n    document.addEventListener('DOMContentLoaded', () => {\n      \/\/ Check crossOrigin on the foreground video\n      ;(function testCrossOrigin() {\n        const vid = document.getElementById('bannerVideo');\n        if (vid.getAttribute('crossorigin') === 'anonymous') {\n          console.log(\"Test #1 passed: crossOrigin is 'anonymous' on bannerVideo\");\n        } else {\n          console.error(\"Test #1 failed: crossOrigin not set to 'anonymous' on bannerVideo\");\n        }\n      })();\n\n      \/\/ You can similarly test the background video if needed.\n      (function testCrossOriginBg() {\n        const vidBg = document.getElementById('bannerVideoBg');\n        if (vidBg.getAttribute('crossorigin') === 'anonymous') {\n          console.log(\"Test #1 (bg) passed: crossOrigin is 'anonymous' on bannerVideoBg\");\n        } else {\n          console.error(\"Test #1 (bg) failed: crossOrigin not set to 'anonymous' on bannerVideoBg\");\n        }\n      })();\n\n      \/*\n        The color extraction code can remain if you'd like,\n        but we removed the dynamic gradient in CSS. The banner\n        now uses a blurred background video. If you want to blend\n        color extraction with the blurred video, you'd do something\n        similar to:\n\n        banner.style.background = `rgba(${r},${g},${b}, 0.5)`;\n\n        or an overlay above the blurred video.\n      *\/\n    });\n  <\/script>\n<\/body>\n<\/html>","width":"100%","alignment":"center"}},"liquid_U3Y48c":{"type":"liquid","disabled":true,"settings":{"code":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" \/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Video Banner<\/title>\n  <style>\n    \/* Reset default padding\/margin *\/\n    html, body {\n      margin: 0;\n      padding: 0;\n    }\n    \/* Container to hold the video *\/\n    .video-banner {\n      position: relative;\n      width: 100%;\n      overflow: hidden;\n      background: #000; \/* Mobile background *\/\n    }\n    \/* Mobile-first video styling *\/\n    .video-banner video {\n      width: 100%;\n      height: 100svh;\n      display: block;\n      object-fit: cover;\n    }\n\n    \/* Desktop styling:\n       Let the video be full width and limit its max-height to 80vh.\n       Height is auto so the aspect ratio is maintained.\n       'object-fit: cover' ensures the container is filled if the screen ratio differs.\n    *\/\n    @media (min-width: 768px) {\n      .video-banner {\n        background: none;\n        max-height: 80vh;\n      }\n      .video-banner video {\n        width: 100%;\n        height: auto;\n        max-height: 80vh;\n        object-fit: cover; \/* or 'contain' to avoid cropping *\/\n      }\n    }\n  <\/style>\n<\/head>\n<body>\n  <section class=\"video-banner\">\n    <video \n      id=\"bannerVideo\"\n      autoplay\n      muted\n      loop\n      playsinline\n      preload=\"metadata\"\n      width=\"1920\"\n      height=\"1080\"\n    >\n      <!-- Mobile First Sources -->\n      <source \n        src=\"MOBILE_VIDEO_URL.webm\"\n        type=\"video\/webm\"\n        media=\"(max-width: 767px)\"\n      >\n      <source \n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/910f3463101c49c0bc0b5913fd792adf.mp4\" \n        type=\"video\/mp4\"\n        media=\"(max-width: 767px)\"\n      >\n      \n      <!-- Desktop Sources -->\n      <source \n        src=\"DESKTOP_VIDEO_URL.webm\"\n        type=\"video\/webm\"\n        media=\"(min-width: 768px)\"\n      >\n      <source \n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/e3a7145299854d1888650f31dd46100e.mp4\"\n        type=\"video\/mp4\"\n        media=\"(min-width: 768px)\"\n      >\n    <\/video>\n  <\/section>\n\n  <script>\n    \/\/ Enhanced video playback handling\n    document.addEventListener('DOMContentLoaded', () => {\n      const video = document.getElementById('bannerVideo');\n\n      const tryPlay = () => {\n        video.play()\n          .catch(error => {\n            if (error.name === 'NotAllowedError') {\n              console.log('Autoplay blocked, waiting for user interaction');\n              document.body.addEventListener('click', () => video.play(), { once: true });\n            }\n          });\n      };\n\n      if (video.readyState > 2) { \/\/ HAVE_FUTURE_DATA\n        tryPlay();\n      } else {\n        video.addEventListener('loadedmetadata', tryPlay);\n        video.addEventListener('canplay', tryPlay);\n      }\n    });\n  <\/script>\n<\/body>\n<\/html>","width":"100%","alignment":"center"}}},"block_order":["liquid_JaGGGr","liquid_U3Y48c"],"settings":{"full_width":true,"space_around":false}},"advanced_content_7B3cfV":{"type":"advanced-content","blocks":{"liquid_U9Vpa8":{"type":"liquid","settings":{"code":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" \/>\n  <title>Video Slider Grid (Swipe + Lazy Load)<\/title>\n  <link rel=\"preconnect\" href=\"https:\/\/cdn.shopify.com\">\n  <link rel=\"dns-prefetch\" href=\"https:\/\/cdn.shopify.com\">\n  <style>\n    .KM-GRIDVID-header {\n      text-align: center;\n      margin: 2rem 0;\n      font-size: 2.5rem;\n      color: #333;\n      text-transform: uppercase;\n      letter-spacing: 2px;\n    }\n\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    body {\n      font-family: Arial, sans-serif;\n    }\n\n    .KM-GRIDVID-slider-wrapper {\n      position: relative;\n      width: 100%;\n      overflow: hidden;\n      margin: 0 auto;\n      max-width: 1200px;\n      padding: 20px 0;\n    }\n\n    .KM-GRIDVID-slides {\n      display: flex;\n      transition: transform 0.5s ease;\n      will-change: transform;\n    }\n\n    \/* By default, each slide takes 100% of the width (mobile: 1 slide per view). *\/\n    .KM-GRIDVID-slide {\n      flex: 0 0 auto;\n      width: 100%;\n      position: relative;\n      background: #f5f5f5;\n      min-height: 300px;\n    }\n\n    \/* On desktop (>=768px), show 2 slides at once by making each 50% *\/\n    @media (min-width: 768px) {\n      .KM-GRIDVID-slide {\n        width: 50%;\n      }\n    }\n\n    \/* Spinning loader *\/\n    .KM-GRIDVID-slide::before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      width: 40px;\n      height: 40px;\n      border: 3px solid #ddd;\n      border-radius: 50%;\n      border-top-color: #333;\n      animation: spin 1s linear infinite;\n      transform: translate(-50%, -50%);\n      z-index: 1;\n    }\n\n    \/* Hide spinner once the slide is loaded *\/\n    .KM-GRIDVID-slide.video-loaded::before {\n      display: none;\n    }\n\n    @keyframes spin {\n      to { transform: translate(-50%, -50%) rotate(360deg); }\n    }\n\n    .KM-GRIDVID-slide video {\n      width: 100%;\n      height: auto;\n      display: block;\n      object-fit: cover;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    }\n    .KM-GRIDVID-slide video.loaded {\n      opacity: 1;\n    }\n\n    .KM-GRIDVID-nav-button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      background: rgba(0,0,0,0.5);\n      color: #fff;\n      border: none;\n      padding: 10px 15px;\n      cursor: pointer;\n      font-size: 16px;\n      z-index: 10;\n      transition: opacity 0.2s ease;\n    }\n    .KM-GRIDVID-nav-button:hover {\n      background: rgba(0,0,0,0.7);\n    }\n    .KM-GRIDVID-nav-button:disabled {\n      opacity: 0.3;\n      cursor: not-allowed;\n      background: rgba(0,0,0,0.3);\n    }\n    .KM-GRIDVID-prev-btn {\n      left: 10px;\n    }\n    .KM-GRIDVID-next-btn {\n      right: 10px;\n    }\n  <\/style>\n<\/head>\n<body>\n  <h1 class=\"KM-GRIDVID-header\">BEFORE &amp; AFTERS<\/h1>\n\n  <div class=\"KM-GRIDVID-slider-wrapper\">\n    <button class=\"KM-GRIDVID-nav-button KM-GRIDVID-prev-btn\">&laquo;<\/button>\n\n    <div class=\"KM-GRIDVID-slides\" id=\"KM-GRIDVID-slides\">\n      <div class=\"KM-GRIDVID-slide\">\n        <video \n          data-src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/2270de280e8a4b5dafd40e84a4837839.mp4\"\n          poster=\"placeholder.jpg\"\n          autoplay muted loop playsinline preload=\"none\">\n          <source src=\"video.webm\" type=\"video\/webm\">\n        <\/video>\n      <\/div>\n      <div class=\"KM-GRIDVID-slide\">\n        <video \n          data-src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/04e4bf3386e14964978a3780ba908181.mp4\"\n          poster=\"placeholder.jpg\"\n          autoplay muted loop playsinline preload=\"none\">\n          <source src=\"video.webm\" type=\"video\/webm\">\n        <\/video>\n      <\/div>\n      <div class=\"KM-GRIDVID-slide\">\n        <video \n          data-src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/c37dffd988284fbf8b8cc19037a3c311.mp4\"\n          poster=\"placeholder.jpg\"\n          autoplay muted loop playsinline preload=\"none\">\n          <source src=\"video.webm\" type=\"video\/webm\">\n        <\/video>\n      <\/div>\n      <div class=\"KM-GRIDVID-slide\">\n        <video \n          data-src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/6d6cf84789a648b6bd36a29072147884.mp4\"\n          poster=\"placeholder.jpg\"\n          autoplay muted loop playsinline preload=\"none\">\n          <source src=\"video.webm\" type=\"video\/webm\">\n        <\/video>\n      <\/div>\n    <\/div>\n\n    <button class=\"KM-GRIDVID-nav-button KM-GRIDVID-next-btn\">&raquo;<\/button>\n  <\/div>\n\n  <script>\n    const slidesContainer = document.getElementById('KM-GRIDVID-slides');\n    const slides = Array.from(slidesContainer.querySelectorAll('.KM-GRIDVID-slide'));\n    const prevBtn = document.querySelector('.KM-GRIDVID-prev-btn');\n    const nextBtn = document.querySelector('.KM-GRIDVID-next-btn');\n\n    let currentIndex = 0;\n    let slideWidth = 0;\n    let isAnimating = false;\n\n    \/\/ Lazy Loading Configuration\n    const MAX_CONCURRENT_LOADS = 2;\n    let activeLoads = 0;\n    const observerOptions = {\n      root: null,\n      rootMargin: '200px 0px',\n      threshold: 0.2\n    };\n\n    \/\/ load total slides from DOM\n    const totalSlides = slides.length;\n\n    \/\/ function determines how many slides are in view\n    function getSlidesPerView() {\n      \/\/ 2 slides per view if width >= 768px, otherwise 1\n      return window.innerWidth >= 768 ? 2 : 1;\n    }\n\n    \/\/ max index is totalSlides - slidesPerView\n    function getMaxIndex() {\n      return Math.max(0, totalSlides - getSlidesPerView());\n    }\n\n    function calculateSlideWidth() {\n      \/\/ the container width\n      const containerWidth = slidesContainer.offsetWidth;\n      \/\/ each slide will be containerWidth \/ slidesPerView wide\n      const spv = getSlidesPerView();\n      \/\/ if containerWidth is 0 on load, fallback to slider wrapper width\n      if (containerWidth === 0) {\n        const wrapper = document.querySelector('.KM-GRIDVID-slider-wrapper');\n        return wrapper ? wrapper.offsetWidth \/ spv : 0;\n      }\n      return containerWidth \/ spv;\n    }\n\n    function updateSliderPosition() {\n      slidesContainer.style.transform = `translateX(-${currentIndex * slideWidth}px)`;\n    }\n\n    function updateButtonStates() {\n      const maxIndex = getMaxIndex();\n      prevBtn.disabled = (currentIndex === 0);\n      nextBtn.disabled = (currentIndex === maxIndex);\n    }\n\n    function handleNavigation(direction) {\n      if (isAnimating) return;\n      const maxIndex = getMaxIndex();\n      let newIndex = currentIndex + direction;\n      if (newIndex < 0) newIndex = 0;\n      if (newIndex > maxIndex) newIndex = maxIndex;\n\n      if (newIndex !== currentIndex) {\n        isAnimating = true;\n        currentIndex = newIndex;\n        slidesContainer.style.transition = 'transform 0.5s ease';\n        updateSliderPosition();\n        updateButtonStates();\n\n        slidesContainer.addEventListener('transitionend', () => {\n          isAnimating = false;\n        }, { once: true });\n      }\n    }\n\n    \/\/ Touch handling\n    let touchStartX = 0;\n    const SWIPE_THRESHOLD = 50;\n\n    function handleTouchStart(e) {\n      touchStartX = e.changedTouches[0].clientX;\n    }\n\n    function handleTouchEnd(e) {\n      const touchEndX = e.changedTouches[0].clientX;\n      const distance = touchEndX - touchStartX;\n\n      if (distance < -SWIPE_THRESHOLD) handleNavigation(1);\n      else if (distance > SWIPE_THRESHOLD) handleNavigation(-1);\n    }\n\n    \/\/ Immediately load first video\n    const firstVideo = slides[0].querySelector('video');\n    firstVideo.src = firstVideo.dataset.src;\n    firstVideo.addEventListener('loadeddata', () => {\n      firstVideo.classList.add('loaded');\n      firstVideo.parentElement.classList.add('video-loaded');\n    });\n\n    \/\/ Configure Intersection Observer for lazy loading\n    const videoObserver = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && activeLoads < MAX_CONCURRENT_LOADS) {\n          const video = entry.target;\n          if (!video.src) {\n            activeLoads++;\n            const dataSrc = video.getAttribute('data-src');\n            video.src = dataSrc;\n            video.removeAttribute('data-src');\n\n            video.addEventListener('loadeddata', () => {\n              video.classList.add('loaded');\n              video.parentElement.classList.add('video-loaded');\n              activeLoads--;\n            });\n          }\n          videoObserver.unobserve(video);\n        }\n      });\n    }, observerOptions);\n\n    \/\/ Observe all videos except first\n    const allVideos = Array.from(document.querySelectorAll('.KM-GRIDVID-slide video'));\n    allVideos.slice(1).forEach(video => videoObserver.observe(video));\n\n    \/\/ Event listeners\n    nextBtn.addEventListener('click', () => handleNavigation(1));\n    prevBtn.addEventListener('click', () => handleNavigation(-1));\n    slidesContainer.addEventListener('touchstart', handleTouchStart, { passive: true });\n    slidesContainer.addEventListener('touchend', handleTouchEnd, { passive: true });\n\n    \/\/ On load and resize, recalc slide widths, re-assign them, and reset position.\n    function resizeAndRefresh() {\n      slideWidth = calculateSlideWidth();\n      \/\/ Assign each slide the same calculated width (css width is 100% or 50%, but we do exact px for the transform calculations)\n      slides.forEach(slide => {\n        slide.style.minWidth = slideWidth + 'px';\n      });\n      updateSliderPosition();\n      updateButtonStates();\n    }\n\n    window.addEventListener('load', () => {\n      resizeAndRefresh();\n      \/\/ start with prevBtn disabled\n      prevBtn.disabled = true;\n    });\n\n    window.addEventListener('resize', () => {\n      resizeAndRefresh();\n    });\n  <\/script>\n\n  <!-- Test Cases (Manual):\n    1. On mobile (<768px), only 1 slide displays, so you can navigate each of the 4 slides individually.\n    2. On desktop (>=768px), 2 slides should be visible at once. With 4 total slides, you should have 3 possible positions:\n       - currentIndex=0 (slides 0 & 1 visible),\n       - currentIndex=1 (slides 1 & 2 visible),\n       - currentIndex=2 (slides 2 & 3 visible).\n       Attempting to go beyond these positions should disable next\/prev.\n    3. Lazy loading still triggers for the second\/third\/fourth videos as they come into view.\n    4. Spinners hide once videos load.\n    5. Swipe left\/right over 50px moves slides in mobile.\n    6. On window resize, the layout recalculates slides per view.\n  -->\n\n<\/body>\n<\/html>","width":"100%","alignment":"center"}}},"block_order":["liquid_U9Vpa8"],"settings":{"full_width":true,"space_around":false}},"advanced_content_K3n8a3":{"type":"advanced-content","blocks":{"liquid_gRqURA":{"type":"liquid","settings":{"code":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" \/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\/>\n  <title>Custom Video Player<\/title>\n  <style>\n    \/* Existing styles remain unchanged *\/\n    .code-edu-video-section {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin: 1rem 0;\n    }\n\n    .code-edu-video-container {\n      position: relative;\n      width: 1200px;\n      max-width: 100%;\n      aspect-ratio: 16 \/ 9;\n      overflow: hidden;\n      background: #000;\n      font-family: sans-serif;\n    }\n\n    .code-edu-video-container video {\n      width: 100%;\n      height: 100%;\n      display: block;\n      object-fit: cover;\n    }\n\n    .code-edu-play-button {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background-color: red;\n      color: #fff;\n      font-size: 1.2rem;\n      padding: 0.75em 1.5em;\n      border: none;\n      cursor: pointer;\n      border-radius: 80px;\n      transition: background-color 0.3s ease;\n    }\n\n    .code-edu-play-button:hover {\n      background-color: #c00;\n    }\n\n    \/* Add style for the headers *\/\n    h1 {\n      color: black;\n      text-align: center;\n      margin: 2rem 0 0.5rem 0;  \/* top right bottom left *\/\n    }\n  <\/style>\n<\/head>\n<body>\n\n  <!-- Welcome Video -->\n  <h1>WELCOME VIDEO<\/h1>\n  <div class=\"code-edu-video-section\">\n    <div class=\"code-edu-video-container\">\n      <video\n        class=\"code-edu-video\"\n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/5a8f787fc9b8488db56b4857bf51e62b.mp4\"\n        preload=\"metadata\"\n        playsinline\n        poster=\"https:\/\/cdn.shopify.com\/s\/files\/1\/0442\/3516\/1766\/files\/welcome.webp?v=1737580837\"\n      ><\/video>\n      <button class=\"code-edu-play-button\">Play<\/button>\n    <\/div>\n  <\/div>\n\n\n  <script>\n    class VideoPlayer {\n      constructor(container) {\n        this.container = container;\n        this.video = container.querySelector('.code-edu-video');\n        this.playButton = container.querySelector('.code-edu-play-button');\n        this.initialize();\n      }\n\n      initialize() {\n        this.playButton.addEventListener('click', () => this.togglePlay());\n        this.setupControls();\n      }\n\n      togglePlay() {\n        if (this.video.paused) {\n          this.video.play();\n          this.playButton.style.display = 'none';\n        } else {\n          this.video.pause();\n          this.playButton.style.display = 'block';\n        }\n      }\n\n      setupControls() {\n        const showControls = () => this.video.setAttribute('controls', 'true');\n        const hideControls = () => this.video.removeAttribute('controls');\n        \n        if (window.matchMedia('(hover: hover)').matches) {\n          this.container.addEventListener('mouseenter', showControls);\n          this.container.addEventListener('mouseleave', hideControls);\n        } else {\n          this.video.addEventListener('click', () => {\n            this.video.hasAttribute('controls') ? hideControls() : showControls();\n          });\n        }\n      }\n    }\n\n    \/\/ Initialize all three video players\n    document.querySelectorAll('.code-edu-video-container').forEach(container => {\n      new VideoPlayer(container);\n    });\n  <\/script>\n<\/body>\n<\/html>","width":"100%","alignment":"center"}}},"block_order":["liquid_gRqURA"],"settings":{"full_width":true,"space_around":false}},"advanced_content_VLJNWb":{"type":"advanced-content","blocks":{"liquid_cRxB8h":{"type":"liquid","settings":{"code":"<!-- Kate & Kevin Video -->\n  <h1>KATE & KEVIN<\/h1>\n  <div class=\"kate-kevin-video-section\">\n    <div class=\"kate-kevin-video-container\" id=\"kateKevinPlayer\">\n      <video\n        class=\"kate-kevin-video\"\n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/bb5282508d994df4be8e1715e1c29795.mp4\"\n        preload=\"metadata\"\n        playsinline\n        poster=\"https:\/\/cdn.shopify.com\/s\/files\/1\/0442\/3516\/1766\/files\/kate-kevin.webp?v=1737669512\"\n      ><\/video>\n      <button class=\"kate-kevin-play-button\">Play<\/button>\n    <\/div>\n  <\/div>\n\n<style>\n  .kate-kevin-video-section {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1rem 0;\n  }\n\n  .kate-kevin-video-container {\n    position: relative;\n    width: 1200px;\n    max-width: 100%;\n    aspect-ratio: 16 \/ 9;\n    overflow: hidden;\n    background: #000;\n    font-family: sans-serif;\n  }\n\n  .kate-kevin-video {\n    width: 100%;\n    height: 100%;\n    display: block;\n    object-fit: cover;\n  }\n\n  .kate-kevin-play-button {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: red;\n    color: #fff;\n    font-size: 1.2rem;\n    padding: 0.75em 1.5em;\n    border: none;\n    cursor: pointer;\n    border-radius: 80px;\n    transition: background-color 0.3s ease;\n  }\n\n  .kate-kevin-play-button:hover {\n    background-color: #c00;\n  }\n<\/style>\n\n<script>\n  class KateKevinVideoPlayer {\n    constructor(container) {\n      this.container = container;\n      this.video = container.querySelector('.kate-kevin-video');\n      this.playButton = container.querySelector('.kate-kevin-play-button');\n      this.initialize();\n    }\n\n    initialize() {\n      this.playButton.addEventListener('click', () => this.togglePlay());\n      this.setupControls();\n    }\n\n    togglePlay() {\n      if (this.video.paused) {\n        this.video.play();\n        this.playButton.style.display = 'none';\n      } else {\n        this.video.pause();\n        this.playButton.style.display = 'block';\n      }\n    }\n\n    setupControls() {\n      const showControls = () => this.video.setAttribute('controls', 'true');\n      const hideControls = () => this.video.removeAttribute('controls');\n      \n      if (window.matchMedia('(hover: hover)').matches) {\n        this.container.addEventListener('mouseenter', showControls);\n        this.container.addEventListener('mouseleave', hideControls);\n      } else {\n        this.video.addEventListener('click', () => {\n          this.video.hasAttribute('controls') ? hideControls() : showControls();\n        });\n      }\n    }\n  }\n\n  \/\/ Initialize Kate & Kevin video player\n  const kateKevinContainer = document.querySelector('.kate-kevin-video-container');\n  new KateKevinVideoPlayer(kateKevinContainer);\n<\/script>","width":"100%","alignment":"center"}}},"block_order":["liquid_cRxB8h"],"settings":{"full_width":true,"space_around":false}},"advanced_content_fBV4LF":{"type":"advanced-content","blocks":{"liquid_JMFUFh":{"type":"liquid","settings":{"code":"<!-- New CODE FAMILIES Video -->\n  <h1>CODE FAMILIES<\/h1>\n  <div class=\"code-families-video-section\">\n    <div class=\"code-families-video-container\" id=\"codeFamiliesPlayer\">\n      <video\n        class=\"code-families-video\"\n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/5c56bf95cbac403bb0d903257793f507.mp4\"\n        preload=\"metadata\"\n        playsinline\n        poster=\"https:\/\/cdn.shopify.com\/s\/files\/1\/0442\/3516\/1766\/files\/code_families.webp?v=1737582463\"\n      ><\/video>\n      <button class=\"code-families-play-button\">Play<\/button>\n    <\/div>\n  <\/div>\n\n<style>\n  .code-families-video-section {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1rem 0;\n  }\n\n  .code-families-video-container {\n    position: relative;\n    width: 1200px;\n    max-width: 100%;\n    aspect-ratio: 16 \/ 9;\n    overflow: hidden;\n    background: #000;\n    font-family: sans-serif;\n  }\n\n  .code-families-video {\n    width: 100%;\n    height: 100%;\n    display: block;\n    object-fit: cover;\n  }\n\n  .code-families-play-button {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: red;\n    color: #fff;\n    font-size: 1.2rem;\n    padding: 0.75em 1.5em;\n    border: none;\n    cursor: pointer;\n    border-radius: 80px;\n    transition: background-color 0.3s ease;\n  }\n\n  .code-families-play-button:hover {\n    background-color: #c00;\n  }\n<\/style>\n\n<script>\n  class CodeFamiliesVideoPlayer {\n    constructor(container) {\n      this.container = container;\n      this.video = container.querySelector('.code-families-video');\n      this.playButton = container.querySelector('.code-families-play-button');\n      this.initialize();\n    }\n\n    initialize() {\n      this.playButton.addEventListener('click', () => this.togglePlay());\n      this.setupControls();\n    }\n\n    togglePlay() {\n      if (this.video.paused) {\n        this.video.play();\n        this.playButton.style.display = 'none';\n      } else {\n        this.video.pause();\n        this.playButton.style.display = 'block';\n      }\n    }\n\n    setupControls() {\n      const showControls = () => this.video.setAttribute('controls', 'true');\n      const hideControls = () => this.video.removeAttribute('controls');\n      \n      if (window.matchMedia('(hover: hover)').matches) {\n        this.container.addEventListener('mouseenter', showControls);\n        this.container.addEventListener('mouseleave', hideControls);\n      } else {\n        this.video.addEventListener('click', () => {\n          this.video.hasAttribute('controls') ? hideControls() : showControls();\n        });\n      }\n    }\n  }\n\n  \/\/ Initialize Code Families video player\n  const codeFamiliesContainer = document.querySelector('.code-families-video-container');\n  new CodeFamiliesVideoPlayer(codeFamiliesContainer);\n<\/script>","width":"100%","alignment":"center"}}},"block_order":["liquid_JMFUFh"],"settings":{"full_width":true,"space_around":false}},"advanced_content_xUbfEa":{"type":"advanced-content","blocks":{"liquid_GgNUx7":{"type":"liquid","settings":{"code":"<!-- Application Video -->\n  <h1>APPLICATION VIDEO<\/h1>\n  <div class=\"application-video-section\">\n    <div class=\"application-video-container\" id=\"applicationVideoPlayer\">\n      <video\n        class=\"application-video\"\n        src=\"https:\/\/cdn.shopify.com\/videos\/c\/o\/v\/5d4ffcf064ff420db5573fd71e183d71.mp4\"\n        preload=\"metadata\"\n        playsinline\n        poster=\"https:\/\/cdn.shopify.com\/s\/files\/1\/0442\/3516\/1766\/files\/application_video.webp?v=1737585266\"\n      ><\/video>\n      <button class=\"application-play-button\">Play<\/button>\n    <\/div>\n  <\/div>\n\n<style>\n  .application-video-section {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1rem 0;\n  }\n\n  .application-video-container {\n    position: relative;\n    width: 1200px;\n    max-width: 100%;\n    aspect-ratio: 16 \/ 9;\n    overflow: hidden;\n    background: #000;\n    font-family: sans-serif;\n  }\n\n  .application-video {\n    width: 100%;\n    height: 100%;\n    display: block;\n    object-fit: cover;\n  }\n\n  .application-play-button {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: red;\n    color: #fff;\n    font-size: 1.2rem;\n    padding: 0.75em 1.5em;\n    border: none;\n    cursor: pointer;\n    border-radius: 80px;\n    transition: background-color 0.3s ease;\n  }\n\n  .application-play-button:hover {\n    background-color: #c00;\n  }\n<\/style>\n\n<script>\n  class ApplicationVideoPlayer {\n    constructor(container) {\n      this.container = container;\n      this.video = container.querySelector('.application-video');\n      this.playButton = container.querySelector('.application-play-button');\n      this.initialize();\n    }\n\n    initialize() {\n      this.playButton.addEventListener('click', () => this.togglePlay());\n      this.setupControls();\n    }\n\n    togglePlay() {\n      if (this.video.paused) {\n        this.video.play();\n        this.playButton.style.display = 'none';\n      } else {\n        this.video.pause();\n        this.playButton.style.display = 'block';\n      }\n    }\n\n    setupControls() {\n      const showControls = () => this.video.setAttribute('controls', 'true');\n      const hideControls = () => this.video.removeAttribute('controls');\n      \n      if (window.matchMedia('(hover: hover)').matches) {\n        this.container.addEventListener('mouseenter', showControls);\n        this.container.addEventListener('mouseleave', hideControls);\n      } else {\n        this.video.addEventListener('click', () => {\n          this.video.hasAttribute('controls') ? hideControls() : showControls();\n        });\n      }\n    }\n  }\n\n  \/\/ Initialize Application video player\n  const applicationContainer = document.querySelector('.application-video-container');\n  new ApplicationVideoPlayer(applicationContainer);\n<\/script>","width":"100%","alignment":"center"}}},"block_order":["liquid_GgNUx7"],"settings":{"full_width":true,"space_around":false}},"main":{"type":"main-page","disabled":true,"settings":{}},"advanced_content_inCFk4":{"type":"advanced-content","blocks":{"liquid_9F8Ldx":{"type":"liquid","settings":{"code":"<style>\n    .flipbook-button {\n        display: inline-block;\n        background-color: black;\n        color: white !important;\n        padding: 10px 20px;\n        text-decoration: none !important;\n        border-radius: 40px;\n        margin: 10px 10px 10px 0;\n        font-weight: bold;\n        transition: background-color 0.3s ease;\n    }\n    \n    .flipbook-button:hover {\n        background-color: #333;\n        color: white !important;\n        text-decoration: none !important;\n    }\n    \n    .active-component {\n        margin-bottom: 40px;\n    }\n    \n    .active-component p {\n        margin-bottom: 10px;\n    }\n    \n    .active-component p strong {\n        margin-top: 5px;\n        display: block;\n    }\n    \n    .active-component ul {\n        margin-top: 5px;\n        margin-bottom: 20px;\n    }\n    \n    .active-component h4 {\n        margin-bottom: 15px;\n    }\n    <\/style>\n<div class=\"intro-section\">\n<h1>THE NEW CODE OF COLOUR<\/h1>\n<p class=\"intro-text\"><strong>STEP INTO A NEW ERA OF PERFORMANCE.<\/strong><br>INTRODUCING THE SMART PERMANENT HAIR COLOUR<br>POWERED BY SKINCARE TECHNOLOGY, MARKING A NEW<br>ERA OF HIGH-PERFORMING, MODERN COLOUR.<\/p>\n<a href=\"https:\/\/digital.ibss.ca\/books\/xzze\/#p=1\" class=\"flipbook-button\" target=\"_blank\">SWATCH CHART<\/a> <a href=\"https:\/\/digital.ibss.ca\/books\/zztq\/#p=1\" class=\"flipbook-button\" target=\"_blank\">WALL CHART<\/a>\n<p>91 high-performing SHADES that bring the latest trends from fashion<br>runways and editorial landscape through rich, modern, illuminated<br>colours that are lit from within.<\/p>\n<p><img src=\"https:\/\/cdn.shopify.com\/s\/files\/1\/0442\/3516\/1766\/files\/power.webp?v=1737520951\" alt=\"Power Demonstration\"><\/p>\n<\/div>","width":"100%","alignment":"center"}}},"block_order":["liquid_9F8Ldx"],"settings":{"full_width":false,"space_around":true}}},"order":["category_nav_WaJaEe","advanced_content_iJ9jpN","advanced_content_7B3cfV","advanced_content_K3n8a3","advanced_content_VLJNWb","advanced_content_fBV4LF","advanced_content_xUbfEa","main","advanced_content_inCFk4"]}